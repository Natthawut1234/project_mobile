import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:project/pages/payment_screen.dart';
import '../provider/list_menu.dart';
import '../model/menu_item.dart';

class MenuScreen extends StatefulWidget {
  const MenuScreen({Key? key}) : super(key: key);

  @override
  _MenuScreenState createState() => _MenuScreenState();
}

class _MenuScreenState extends State<MenuScreen> {
  String searchQuery = '';

  @override
  Widget build(BuildContext context) {
    final listMenu = Provider.of<ListMenu>(context);

    // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    final filteredMenu = listMenu.menuItems.where((item) {
      return item.name.toLowerCase().contains(searchQuery.toLowerCase());
    }).toList();

    return Scaffold(
      body: Column(
        children: [
          // üîπ ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏°‡∏ô‡∏π
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: TextField(
              decoration: InputDecoration(
                labelText: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏°‡∏ô‡∏π...',
                prefixIcon: Icon(Icons.search),
                border:
                    OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
              ),
              onChanged: (value) {
                setState(() {
                  searchQuery = value; // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
                });
              },
            ),
          ),

          Expanded(
            child: Row(
              children: [
                // üîπ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏ô‡∏π (GridView)
                Expanded(
                  flex: 2,
                  child: GridView.builder(
                    padding: EdgeInsets.all(8.0),
                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                      crossAxisCount: 3,
                      childAspectRatio: 1.2,
                    ),
                    itemCount: filteredMenu.length, // ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏£‡∏≠‡∏á
                    itemBuilder: (context, index) {
                      final item = filteredMenu[index];

                      return Card(
                        shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10)),
                        child: InkWell(
                          onTap: () => listMenu.addItem(item),
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Expanded(
                                child: ClipRRect(
                                  borderRadius: BorderRadius.vertical(
                                      top: Radius.circular(10)),
                                  child: Image.network(
                                    item.image,
                                    width: double.infinity,
                                    fit: BoxFit.cover,
                                  ),
                                ),
                              ),
                              Padding(
                                padding: EdgeInsets.all(8.0),
                                child: Column(
                                  children: [
                                    Text(item.name,
                                        style: TextStyle(
                                            fontSize: 18,
                                            fontWeight: FontWeight.bold)),
                                    SizedBox(height: 4),
                                    Text('${item.price} ‡∏ö‡∏≤‡∏ó',
                                        style: TextStyle(
                                            fontSize: 16, color: Colors.grey)),
                                  ],
                                ),
                              ),
                            ],
                          ),
                        ),
                      );
                    },
                  ),
                ),

                // üîπ ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                Expanded(
                  flex: 1,
                  child: Container(
                    color: Colors.grey[200],
                    padding: EdgeInsets.all(8.0),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text('‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å',
                            style: TextStyle(
                                fontSize: 20, fontWeight: FontWeight.bold)),

                        // ‚úÖ ‡πÉ‡∏ä‡πâ Consumer ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ UI ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏∑‡πà‡∏≠ selectedItems ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
                        Expanded(
                          child: Consumer<ListMenu>(
                            builder: (context, listMenu, child) {
                              return ListView.builder(
                                itemCount: listMenu.selectedItems.length,
                                itemBuilder: (context, index) {
                                  final selectedItem =
                                      listMenu.selectedItems[index];

                                  return ListTile(
                                    leading: Image.network(
                                      selectedItem.image,
                                      width: 40,
                                      height: 40,
                                      fit: BoxFit.cover,
                                    ),
                                    title: Text(selectedItem.name),
                                    subtitle:
                                        Text('‡∏£‡∏≤‡∏Ñ‡∏≤: ${selectedItem.price} ‡∏ö‡∏≤‡∏ó'),
                                    trailing: IconButton(
                                      icon: Icon(Icons.remove_circle,
                                          color: Colors.red),
                                      onPressed: () =>
                                          listMenu.removeItem(index),
                                    ),
                                  );
                                },
                              );
                            },
                          ),
                        ),

                        Divider(),

                        // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                        Text(
                            '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${listMenu.selectedItems.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
                            style: TextStyle(
                                fontSize: 16, fontWeight: FontWeight.bold)),
                        SizedBox(height: 10),

                        // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
                        Consumer<ListMenu>(
                          builder: (context, listMenu, child) {
                            return Text(
                              '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°: ${listMenu.getTotalPrice()} ‡∏ö‡∏≤‡∏ó',
                              style: TextStyle(
                                  fontSize: 20, fontWeight: FontWeight.bold),
                            );
                          },
                        ),

                        SizedBox(height: 10),

                        // ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
                        ElevatedButton(
                          style: ElevatedButton.styleFrom(
                              backgroundColor: Colors.green),
                          onPressed: () => _navigateToPaymentScreen(context),
                          child: Text('‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô',
                              style:
                                  TextStyle(fontSize: 18, color: Colors.white)),
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
  void _navigateToPaymentScreen(BuildContext context) {
    final listMenu = Provider.of<ListMenu>(context, listen: false);
    int totalPrice = listMenu.getTotalPrice();

    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => PaymentQRCodeScreen(
            totalAmount: totalPrice.toDouble(),
            selectedItems: listMenu.selectedItems), // ‚úÖ ‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      ),
    );
  }
}
